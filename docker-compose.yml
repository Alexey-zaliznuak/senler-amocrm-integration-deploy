services:
  nginx:
    image: nginx:1.19.3
    ports:
      - "${NGINX_PORT}:80"

    depends_on:
      # - backend
      - frontend

    volumes:
      - static:/usr/share/nginx/html
      - ./configs/nginx/nginx.conf:/etc/nginx/conf.d/default.conf

  db:
    image: postgres:16
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

    volumes:
      - postgres_data:/var/lib/postgresql/data

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
      interval: 3s
      timeout: 5s
      retries: 10

  # backend:
  #   build: ./backend
  #   env_file: .env

  #   depends_on:
  #     - db

  #   volumes:
  #     - logs:/app/logs

  admin:
    build:
      context: .
      dockerfile: |
        FROM node:18
        WORKDIR /app
        COPY package*.json ./
        RUN npm install
        COPY . .
        CMD ["npx", "prisma", "studio"]
    env_file: .env

    command: npx prisma studio

    ports:
      - 5555:5555

  frontend:
    build:
      context: ./frontend

      args:
        VITE_CLIENT_ID: $AMO_CRM_CLIENT_ID
        VITE_REDIRECT_URI: $AMO_CRM_REDIRECT_URI

    volumes:
      - static:/app/dist

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch_data:
  postgres_data:
  static:
  logs:
