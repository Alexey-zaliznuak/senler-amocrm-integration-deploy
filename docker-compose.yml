services:
  nginx:
    image: nginx:1.19.3
    ports:
      - "${NGINX_PORT}:80"

    depends_on:
      - backend
      - frontend

    volumes:
      - static:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf

  db:
    image: postgres:16
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

    volumes:
      - postgres_data:/var/lib/postgresql/data

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 3s
      timeout: 5s
      retries: 10

  backend:
    build: ./backend
    env_file: .env

    depends_on:
      db:
        condition: service_healthy

    volumes:
      - logs:/app/logs

  admin_panel:
    image: node:20.17.0
    working_dir: /app
    command: npx prisma studio
    ports:
      - 5555:5555

    environment:
      DATABASE_URL: ${DATABASE_URL}

    depends_on:
      db:
        condition: service_healthy

    volumes:
      - ./backend:/app

  frontend:
    build: ./frontend
    env_file: .env
    volumes:
      - static:/app/dist


volumes:
  postgres_data:
  static:
  logs:
