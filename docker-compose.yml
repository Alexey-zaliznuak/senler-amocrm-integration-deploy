services:
  nginx:
    image: nginx:1.19.3
    ports:
      - "${NGINX_PORT}:80"

    depends_on:
      - backend
      - frontend

    volumes:
      - static:/usr/share/nginx/html
      - ./configs/nginx/nginx.conf:/etc/nginx/conf.d/default.conf

  db:
    image: postgres:16
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

    volumes:
      - postgres_data:/var/lib/postgresql/data

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
      interval: 3s
      timeout: 5s
      retries: 10

  backend:
    build: ./backend
    env_file: .env

    depends_on:
      - db
      # - elasticsearch

    volumes:
      - logs:/app/logs

  # elasticsearch:
  #   image: elasticsearch:8.16.1
  #   container_name: elasticsearch
  #   environment:
  #     ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
  #     SERVICE_ACCOUNT_TOKEN: ${ELASTIC_SERVICE_ACCOUNT_TOKEN}

  #   healthcheck:
  #     test: [ "CMD-SHELL", "curl -u ${ELASTIC_USERNAME}:${ELASTIC_PASSWORD} -fsSL http://localhost:9200/_cluster/health | grep -E '\"status\":\"(yellow|green)\"' || exit 1" ]
  #     interval: 10s
  #     timeout: 10s
  #     retries: 10

  #   volumes:
  #     - elasticsearch_data:/usr/share/elasticsearch/data
  #     - ./configs/elasticsearch/config.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
  #     - ./configs/elasticsearch/service_tokens.env:/usr/share/elasticsearch/config/service_tokens.env

  #   ports:
  #     - "${ELASTICSEARCH_PORT}:9200"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   networks:
  #     - elk

  # kibana:
  #   image: kibana:8.10.2
  #   container_name: kibana

  #   environment:
  #     ELASTICSEARCH_HOST: ${ELASTICSEARCH_HOST}
  #     ELASTIC_SERVICE_ACCOUNT_TOKEN: ${ELASTIC_SERVICE_ACCOUNT_TOKEN}
  #     ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}

  #   volumes:
  #     - ./configs/kibana/config.yml:/usr/share/kibana/config/kibana.yml

  #   ports:
  #     - "${KIBANA_PORT}:5601"
  #   networks:
  #     - elk
  #   depends_on:
  #     elasticsearch:
  #       condition: service_healthy

  frontend:
    build: ./frontend
    environment:
      - VITE_CLIENT_ID=${AMO_CRM_CLIENT_ID}
      - VITE_REDIRECT_URI=${AMO_CRM_REDIRECT_URI}
    volumes:
      - static:/app/dist

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch_data:
  postgres_data:
  static:
  logs:
