services:
  nginx:
    image: nginx:1.19.3
    ports:
      - "${NGINX_PORT}:80"
    depends_on:
      - backend
      - frontend
    volumes:
      - static:/usr/share/nginx/html
      - ./configs/nginx/nginx.conf:/etc/nginx/conf.d/default.conf

  db:
    image: postgres:16
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5400:${POSTGRES_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
      interval: 3s
      timeout: 5s
      retries: 10

  keydb:
    image: eqalpha/keydb:latest
    command: keydb-server --appendonly yes
    volumes:
      - keydb_data:/data
    healthcheck:
      test: ["CMD", "keydb-cli", "ping"]
      interval: 3s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: my_rabbitmq
    hostname: rabbitmq-host
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: administrator5657654335678675645356
      RABBITMQ_DEFAULT_PASS: administrator5657654335678675645356
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  backend:
    build: ./backend
    env_file: .env
    depends_on:
      - db
      - rabbitmq
    volumes:
      - logs:/app/logs

  admin:
    build: ./backend
    env_file: .env
    command: npx prisma studio
    ports:
      - 5555:5555

  frontend:
    build:
      context: ./frontend
      args:
        VITE_CLIENT_ID: $AMO_CRM_CLIENT_ID
        VITE_REDIRECT_URI: $AMO_CRM_REDIRECT_URI
    volumes:
      - static:/app/dist

volumes:
  keydb_data:
  rabbitmq_data:
  postgres_data:
  static:
  logs:
  nats_data:
